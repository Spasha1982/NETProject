name: Build and Deploy ASP.NET App to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write       # Required for OIDC (federated) authentication
  contents: read

env:
  BuildPlatform: "Any CPU"
  BuildConfiguration: "Release"

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    # ‚úÖ Step 1: Checkout the source code
    - name: Checkout repository
      uses: actions/checkout@v4

    # ‚úÖ Step 2: Restore NuGet packages automatically
    - name: Restore NuGet packages
      run: |
        $solution = Get-ChildItem -Path ${{ github.workspace }} -Filter *.sln -Recurse | Select-Object -First 1
        if (-not $solution) { throw "‚ùå No .sln file found in repository" }
        Write-Host "‚úÖ Found solution file: $($solution.FullName)"
        nuget restore $solution.FullName
      shell: pwsh

    # ‚úÖ Step 3: Build and publish the solution
    - name: Build and publish solution
      run: |
        $solution = Get-ChildItem -Path ${{ github.workspace }} -Filter *.sln -Recurse | Select-Object -First 1
        if (-not $solution) { throw "‚ùå No .sln file found" }

        # Locate MSBuild on the runner
        $msbuild = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
          -latest -products * -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
        if (-not $msbuild) { throw "‚ùå MSBuild not found on runner" }

        Write-Host "‚úÖ Using MSBuild at: $msbuild"

        # Define and create publish output folder
        $publishFolder = Join-Path $env:RUNNER_TEMP "publish_output"
        New-Item -ItemType Directory -Force -Path $publishFolder | Out-Null

        # Build and publish the web app
        & "$msbuild" $solution.FullName `
          /p:Configuration=Release `
          /p:Platform="Any CPU" `
          /p:WebPublishMethod=FileSystem `
          /p:DeleteExistingFiles=true `
          /p:publishUrl="$publishFolder"

        Write-Host "‚úÖ Build and publish complete. Output folder: $publishFolder"
      shell: pwsh

    # ‚úÖ Step 4 (Optional): Verify publish folder contents
    - name: Verify publish folder contents
      run: Get-ChildItem -Recurse ${{ runner.temp }}\publish_output
      shell: pwsh

    # ‚úÖ Step 5: Azure Login via OIDC (no secrets)
    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # ‚úÖ Step 6: Deploy to Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: "SFinfotechwebapp01"     # üîπ Replace with your Azure Web App name
        package: ${{ runner.temp }}\publish_output
