name: Build ASP.NET Framework App

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    env:
      BuildPlatform: 'Any CPU'
      BuildConfiguration: 'Release'
      PackageLocation: '${{ github.workspace }}\drop'
      ReferencePath: '${{ github.workspace }}\Libs'
      SymbolPath: '${{ github.workspace }}\Symbols'
      ArtifactName: 'drop'
      ArtifactPath: '${{ github.workspace }}\artifact'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup NuGet
      uses: nuget/setup-nuget@v2
      with:
        nuget-version: 'latest'

    - name: Restore NuGet packages
      shell: pwsh
      run: |
        $solution = Get-ChildItem -Path . -Recurse -Filter *.sln | Select-Object -First 1
        if (-not $solution) { throw "No .sln file found in repo" }
        Write-Host "Restoring packages for $($solution.FullName)"
        nuget restore "$($solution.FullName)"

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: '17.0'   # Visual Studio 2022 or later

    - name: Build and Package Solution
      shell: pwsh
      run: |
        $sln = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
        if (-not $sln) { throw "No .sln file found in repository" }

        $publishDir = "${{ env.PackageLocation }}"
        New-Item -Path $publishDir -ItemType Directory -Force | Out-Null

        Write-Host "Building and packaging solution: $($sln.FullName)"
        msbuild "$($sln.FullName)" `
          /p:DeployOnBuild=true `
          /p:WebPublishMethod=Package `
          /p:PackageAsSingleFile=true `
          /p:SkipInvalidConfigurations=true `
          /p:PackageLocation="$publishDir" `
          /p:IncludeServerNameInBuildInfo=true `
          /p:GenerateBuildInfoConfigFile=true `
          /p:BuildSymbolStorePath="${{ env.SymbolPath }}" `
          /p:ReferencePath="${{ env.ReferencePath }}" `
          /p:Platform="${{ env.BuildPlatform }}" `
          /p:Configuration="${{ env.BuildConfiguration }}" `
          /p:VisualStudioVersion="17.0"

        Write-Host "Build completed. Packages stored in: $publishDir"


        - name: Copy only JSON config files to artifact staging directory
          shell: pwsh
          run: |
            $source = "${{ github.workspace }}"
            $target = Join-Path $source "artifact"
        
            Write-Host "Copying only JSON config files from $source to $target"
        
            # Ensure the target directory exists
            New-Item -Path $target -ItemType Directory -Force | Out-Null
        
            # Copy only .json files recursively
            Get-ChildItem -Path $source -Recurse -Filter *.json -Force |
              Where-Object { $_.FullName -notlike "$target*" } |
              Copy-Item -Destination $target -Force
        
            Write-Host "âœ… JSON config files copied successfully to: $target"


    # - name: Copy files to artifact staging directory
    #   shell: pwsh
    #   run: |
    #     $source = "${{ github.workspace }}"
    #     $target = Join-Path $source "artifact"
    #     Write-Host "Copying files from $source to $target"

    #     # Ensure target exists
    #     New-Item -Path $target -ItemType Directory -Force | Out-Null

    #     # Copy everything except the target folder itself
    #     Get-ChildItem -Path $source -Recurse -Force |
    #       Where-Object { $_.FullName -notlike "$target*" } |
    #       Copy-Item -Destination $target -Recurse -Force

    #     Write-Host "Files copied successfully to $target"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ArtifactName }}
        path: ${{ env.ArtifactPath }}
