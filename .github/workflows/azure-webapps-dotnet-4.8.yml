name: Build and Deploy ASP.NET Framework App to Azure WebApp (OIDC)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write        # ‚úÖ Required for OIDC login
  contents: read

env:
  BuildConfiguration: Release
  BuildPlatform: "Any CPU"

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup NuGet
      - name: Setup NuGet
        uses: nuget/setup-nuget@v2

      # 3Ô∏è‚É£ Restore NuGet packages (auto-detect .sln)
      - name: Restore NuGet packages
        shell: pwsh
        run: |
          $solution = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Filter *.sln -Recurse | Select-Object -First 1
          if (-not $solution) {
            Write-Error "‚ùå No solution file found in repository!"
            exit 1
          }
          Write-Host "‚úÖ Found solution: $($solution.FullName)"
          nuget restore $solution.FullName

      # 4Ô∏è‚É£ Build and publish using full MSBuild path
      - name: Build and Publish (Solution-based)
        shell: pwsh
        run: |
          $solution = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Filter *.sln -Recurse | Select-Object -First 1
          if (-not $solution) {
            Write-Error "‚ùå No .sln file found in repo!"
            exit 1
          }

          Write-Host "üß© Building solution: $($solution.FullName)"
          $publishDir = Join-Path $env:RUNNER_TEMP "publish_output"
          if (-not (Test-Path $publishDir)) { New-Item -ItemType Directory -Path $publishDir | Out-Null }

          $msbuild = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe"

          & $msbuild $solution.FullName `
            /p:Configuration=Release `
            /p:Platform="Any CPU" `
            /p:DeployOnBuild=true `
            /p:WebPublishMethod=FileSystem `
            /p:DeleteExistingFiles=true `
            /p:publishUrl="$publishDir" `
            /p:AutoParameterizationWebConfigConnectionStrings=false

          if (Test-Path $publishDir) {
            Write-Host "‚úÖ Build completed. Published to: $publishDir"
            Get-ChildItem -Recurse $publishDir
          } else {
            Write-Error "‚ùå Publish folder not found! Check MSBuild output above."
            exit 1
          }

      # 5Ô∏è‚É£ Login to Azure using OIDC (no secrets required)
      - name: Login to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 6Ô∏è‚É£ Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "SFinfotechwebapp01"              # üëà Your Web App name
          package: ${{ runner.temp }}/publish_output  # üëà Folder to deploy

      # 7Ô∏è‚É£ (Optional) Upload publish folder for debugging
      - name: Upload publish output (optional)
        uses: actions/upload-artifact@v4
        with:
          name: publish_output
          path: ${{ runner.temp }}/publish_output
